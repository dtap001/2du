const React = require("react");
const {
  useState
} = require("react");
const {
  Box,
  Text,
  useInput,
  Newline
} = require("ink");
const {
  execSync
} = require("child_process");
const TextInput = require("ink-text-input").default;

//Commit changes tab -- takes in a message to commit on the current branch

const CommitAction = props => {
  const [message, setMessage] = useState("");
  let {
    refreshTab
  } = props;
  const handleSubmit = () => {
    try {
      execSync('git commit -m "' + message + '"');
      refreshTab('');
    } catch (error) {}
  };
  return /*#__PURE__*/React.createElement(Box, {
    flexDirection: "column"
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, null, " ")), /*#__PURE__*/React.createElement(Box, {
    marginRight: 1
  }, /*#__PURE__*/React.createElement(Text, {
    color: "red"
  }, "   Commit Message: "), /*#__PURE__*/React.createElement(TextInput, {
    value: message,
    onChange: setMessage,
    onSubmit: handleSubmit
  })), /*#__PURE__*/React.createElement(Newline, null), /*#__PURE__*/React.createElement(Text, {
    color: "gray"
  }, "   Press ESC to go back "));
};
module.exports = CommitAction;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJ1c2VTdGF0ZSIsIkJveCIsIlRleHQiLCJ1c2VJbnB1dCIsIk5ld2xpbmUiLCJleGVjU3luYyIsIlRleHRJbnB1dCIsImRlZmF1bHQiLCJDb21taXRBY3Rpb24iLCJwcm9wcyIsIm1lc3NhZ2UiLCJzZXRNZXNzYWdlIiwicmVmcmVzaFRhYiIsImhhbmRsZVN1Ym1pdCIsImVycm9yIiwiY3JlYXRlRWxlbWVudCIsImZsZXhEaXJlY3Rpb24iLCJtYXJnaW5SaWdodCIsImNvbG9yIiwidmFsdWUiLCJvbkNoYW5nZSIsIm9uU3VibWl0IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkNvbW1pdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBSZWFjdCA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgdXNlU3RhdGUgfSA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcbmNvbnN0IHsgQm94LCBUZXh0LCB1c2VJbnB1dCwgTmV3bGluZSB9ID0gcmVxdWlyZShcImlua1wiKTtcbmNvbnN0IHsgZXhlY1N5bmMgfSA9IHJlcXVpcmUoXCJjaGlsZF9wcm9jZXNzXCIpO1xuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZShcImluay10ZXh0LWlucHV0XCIpLmRlZmF1bHQ7XG5cbi8vQ29tbWl0IGNoYW5nZXMgdGFiIC0tIHRha2VzIGluIGEgbWVzc2FnZSB0byBjb21taXQgb24gdGhlIGN1cnJlbnQgYnJhbmNoXG5cbmNvbnN0IENvbW1pdEFjdGlvbiA9IChwcm9wcykgPT4ge1xuXHRjb25zdCBbbWVzc2FnZSwgc2V0TWVzc2FnZV0gPSB1c2VTdGF0ZShcIlwiKTtcblxuXHRsZXQge3JlZnJlc2hUYWJ9ID0gcHJvcHNcblxuXHRjb25zdCBoYW5kbGVTdWJtaXQgPSAoKSA9PiB7XG5cdFx0dHJ5IHtcblx0XHRcdGV4ZWNTeW5jKCdnaXQgY29tbWl0IC1tIFwiJyArIG1lc3NhZ2UgKydcIicpXG5cdFx0XHRyZWZyZXNoVGFiKCcnKVxuXHRcdH0gY2F0Y2ggKGVycm9yKSB7fVxuXHR9O1xuXHRyZXR1cm4gKFxuXHRcdDxCb3ggZmxleERpcmVjdGlvbj1cImNvbHVtblwiPlxuXHRcdFx0PEJveD48VGV4dD4gPC9UZXh0PjwvQm94PlxuXHRcdFx0PEJveCBtYXJnaW5SaWdodD17MX0+XG5cdFx0XHRcdDxUZXh0IGNvbG9yPSdyZWQnPiAgIENvbW1pdCBNZXNzYWdlOiA8L1RleHQ+XG5cdFx0XHRcdDxUZXh0SW5wdXQgdmFsdWU9e21lc3NhZ2V9IG9uQ2hhbmdlPXtzZXRNZXNzYWdlfSBvblN1Ym1pdD17aGFuZGxlU3VibWl0fSAvPlxuXHRcdFx0PC9Cb3g+XG5cdFx0XHQ8TmV3bGluZSAvPlxuXHRcdFx0PFRleHQgY29sb3I9J2dyYXknPiAgIFByZXNzIEVTQyB0byBnbyBiYWNrIDwvVGV4dD5cblx0XHQ8L0JveD5cblx0KTtcbn1cblxuXG5cbm1vZHVsZS5leHBvcnRzID0gQ29tbWl0QWN0aW9uO1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQU8sQ0FBQztBQUM5QixNQUFNO0VBQUVDO0FBQVMsQ0FBQyxHQUFHRCxPQUFPLENBQUMsT0FBTyxDQUFDO0FBQ3JDLE1BQU07RUFBRUUsR0FBRztFQUFFQyxJQUFJO0VBQUVDLFFBQVE7RUFBRUM7QUFBUSxDQUFDLEdBQUdMLE9BQU8sQ0FBQyxLQUFLLENBQUM7QUFDdkQsTUFBTTtFQUFFTTtBQUFTLENBQUMsR0FBR04sT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUM3QyxNQUFNTyxTQUFTLEdBQUdQLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDUSxPQUFPOztBQUVuRDs7QUFFQSxNQUFNQyxZQUFZLEdBQUlDLEtBQUssSUFBSztFQUMvQixNQUFNLENBQUNDLE9BQU8sRUFBRUMsVUFBVSxDQUFDLEdBQUdYLFFBQVEsQ0FBQyxFQUFFLENBQUM7RUFFMUMsSUFBSTtJQUFDWTtFQUFVLENBQUMsR0FBR0gsS0FBSztFQUV4QixNQUFNSSxZQUFZLEdBQUdBLENBQUEsS0FBTTtJQUMxQixJQUFJO01BQ0hSLFFBQVEsQ0FBQyxpQkFBaUIsR0FBR0ssT0FBTyxHQUFFLEdBQUcsQ0FBQztNQUMxQ0UsVUFBVSxDQUFDLEVBQUUsQ0FBQztJQUNmLENBQUMsQ0FBQyxPQUFPRSxLQUFLLEVBQUUsQ0FBQztFQUNsQixDQUFDO0VBQ0Qsb0JBQ0NoQixLQUFBLENBQUFpQixhQUFBLENBQUNkLEdBQUc7SUFBQ2UsYUFBYSxFQUFDO0VBQVEsZ0JBQzFCbEIsS0FBQSxDQUFBaUIsYUFBQSxDQUFDZCxHQUFHLHFCQUFDSCxLQUFBLENBQUFpQixhQUFBLENBQUNiLElBQUksUUFBQyxHQUFPLENBQU0sQ0FBQyxlQUN6QkosS0FBQSxDQUFBaUIsYUFBQSxDQUFDZCxHQUFHO0lBQUNnQixXQUFXLEVBQUU7RUFBRSxnQkFDbkJuQixLQUFBLENBQUFpQixhQUFBLENBQUNiLElBQUk7SUFBQ2dCLEtBQUssRUFBQztFQUFLLEdBQUMscUJBQXlCLENBQUMsZUFDNUNwQixLQUFBLENBQUFpQixhQUFBLENBQUNULFNBQVM7SUFBQ2EsS0FBSyxFQUFFVCxPQUFRO0lBQUNVLFFBQVEsRUFBRVQsVUFBVztJQUFDVSxRQUFRLEVBQUVSO0VBQWEsQ0FBRSxDQUN0RSxDQUFDLGVBQ05mLEtBQUEsQ0FBQWlCLGFBQUEsQ0FBQ1gsT0FBTyxNQUFFLENBQUMsZUFDWE4sS0FBQSxDQUFBaUIsYUFBQSxDQUFDYixJQUFJO0lBQUNnQixLQUFLLEVBQUM7RUFBTSxHQUFDLDBCQUE4QixDQUM3QyxDQUFDO0FBRVIsQ0FBQztBQUlESSxNQUFNLENBQUNDLE9BQU8sR0FBR2YsWUFBWSIsImlnbm9yZUxpc3QiOltdfQ==